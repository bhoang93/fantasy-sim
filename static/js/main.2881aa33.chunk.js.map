{"version":3,"sources":["Lists/treasureList.js","Lists/enemyList.js","Components/Stats/Stats.js","Components/ActionTabs/BaseActions.js","Components/ActionTabs/Shop.js","Components/ActionTabs/ActionBar.js","Components/ActionLog.js","App.js","serviceWorker.js","index.js"],"names":["treasureList","treasure","name","equipment","stat","amt","value","Object","classCallCheck","this","enemy","str","treasureChance","loot","enemyList","Stats","_ref","stats","inventory","react_default","a","createElement","className","currentHp","maxHp","def","dex","lck","appr","money","map","item","BaseActions","takeRest","increaseStr","increaseDex","increaseAppr","increaseLck","increaseMoney","startCombat","actionsLeft","onClick","Shop","ActionBar","isAlive","currentTab","changeTabs","otherTab","changeTabText","inCombat","class","ActionTabs_BaseActions","ActionTabs_Shop","ActionLog","actions","action","maxActions","playerStats","turn","actionLog","App","_this","possibleConstructorReturn","getPrototypeOf","call","takeAction","setState","prevState","reportAction","push","checkStatus","state","rollStat","Math","floor","random","modifyStat","checkActions","max","defineProperty","concat","randomAmount","min","amount","fightEnemy","length","setTimeout","tabToGo","tabText","Components_Stats_Stats","Components_ActionTabs_ActionBar","src_Components_ActionLog","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2881aa33.chunk.js","sourcesContent":["class treasure {\r\n  constructor(name, equipment, stat, amt, value) {\r\n    this.name = name;\r\n    this.equipment = equipment;\r\n    this.stat = stat;\r\n    this.amt = amt;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nconst gnomesHat = new treasure(\"Gnome's Hat\", true, \"def\", 10, 100);\r\n\r\nconst treasureList = [gnomesHat];\r\n\r\nexport default treasureList;\r\n","import treasureList from \"./treasureList\";\r\n\r\nclass enemy {\r\n  constructor(name, str, treasure, treasureChance, loot) {\r\n    this.name = name;\r\n    this.str = str;\r\n    this.treasure = treasure;\r\n    this.treasureChance = treasureChance;\r\n    this.loot = loot;\r\n  }\r\n}\r\n\r\n//Name, Strength, Treasure, Treasure Droprate, Gold\r\nconst rat = new enemy(\"Rat\", 1, \"none\", 100, 10);\r\nconst goblin = new enemy(\"Goblin\", 5, \"none\", 100, 50);\r\nconst treasureGnome = new enemy(\"Treasure Gnome\", 0, treasureList[0], 0, 50);\r\n\r\nconst enemyList = [rat, goblin, treasureGnome];\r\n\r\nexport default enemyList;\r\n","import React from \"react\";\r\nimport \"./Stats.scss\";\r\n\r\nconst Stats = ({ stats, inventory }) => {\r\n  return (\r\n    <div className=\"stats-display\">\r\n      <div className=\"stat-list\">\r\n        <h3>Stats</h3>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Health:</span> {stats.currentHp}/\r\n          {stats.maxHp}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Defense:</span> {stats.def}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Strength:</span> {stats.str}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Dexerity:</span> {stats.dex}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Luck:</span> {stats.lck}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Appearence:</span> {stats.appr}\r\n        </p>\r\n        <p className=\"stat\">\r\n          <span className=\"stat-title\">Gold:</span> {stats.money}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"inventory\">\r\n        <h3>Inventory</h3>\r\n        {inventory.map(item => {\r\n          return <p className=\"item\">{item}</p>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\n\r\nconst BaseActions = ({\r\n  takeRest,\r\n  increaseStr,\r\n  increaseDex,\r\n  increaseLck,\r\n  increaseAppr,\r\n  increaseMoney,\r\n  actionsLeft,\r\n  startCombat\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"action take-rest\" onClick={takeRest}>\r\n        Go To Sleep <span>💤</span>\r\n      </div>\r\n\r\n      <div className=\"action-block training-actions\">\r\n        <h3>Training</h3>\r\n        <div className=\"action\" onClick={increaseStr}>\r\n          Weight Training\r\n        </div>\r\n        <div className=\"action\" onClick={increaseDex}>\r\n          Run Through Forest\r\n        </div>\r\n        <div className=\"action\" onClick={increaseAppr}>\r\n          Groom Yourself\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"action-block adventure-actions\">\r\n        <h3>Adventures</h3>\r\n        <div className=\"action\" onClick={startCombat}>\r\n          Fight Monsters\r\n        </div>\r\n        <div className=\"action\" onClick={increaseMoney}>\r\n          Work Odd Job\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseActions;\r\n","import React from \"react\";\r\n\r\nconst Shop = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Blacksmith</h3>\r\n        <p className=\"item-to-buy\">Sword</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Chemist</h3>\r\n        <p className=\"item-to-buy\">Potion</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport \"./ActionBar.scss\";\r\n\r\nimport BaseActions from \"./BaseActions\";\r\nimport Shop from \"./Shop\";\r\n\r\nconst ActionBar = ({\r\n  isAlive,\r\n  takeRest,\r\n  increaseStr,\r\n  increaseDex,\r\n  increaseLck,\r\n  increaseAppr,\r\n  increaseMoney,\r\n  actionsLeft,\r\n  startCombat,\r\n  currentTab,\r\n  otherTab,\r\n  changeTabs,\r\n  changeTabText,\r\n  inCombat\r\n}) => {\r\n  return (\r\n    <div className=\"action-bar\">\r\n      {!isAlive && (\r\n        <div class=\"major-status\">\r\n          You Are Dead\r\n          <span>💀</span>\r\n        </div>\r\n      )}\r\n      {inCombat && (\r\n        <div class=\"major-status\">\r\n          in Combat\r\n          <span>⚔️</span>\r\n        </div>\r\n      )}\r\n      <h2>\r\n        Actions Left: <span>{actionsLeft}</span>\r\n      </h2>\r\n      <div className=\"action change-tab\" onClick={changeTabs}>\r\n        {changeTabText}\r\n      </div>\r\n      {currentTab === \"baseActions\" ? (\r\n        <BaseActions\r\n          takeRest={takeRest}\r\n          increaseStr={increaseStr}\r\n          increaseDex={increaseDex}\r\n          increaseLck={increaseLck}\r\n          increaseAppr={increaseAppr}\r\n          increaseMoney={increaseMoney}\r\n          startCombat={startCombat}\r\n        />\r\n      ) : (\r\n        <Shop />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionBar;\r\n","import React from \"react\";\r\nimport \"./ActionLog.scss\";\r\n\r\nconst ActionLog = ({ actions }) => {\r\n  return (\r\n    <div className=\"action-log\">\r\n      {actions.map(action => {\r\n        return <p className=\"action-report\">{action}</p>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionLog;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport enemyList from \"./Lists/enemyList\";\n\nimport Stats from \"./Components/Stats/Stats\";\nimport ActionBar from \"./Components/ActionTabs/ActionBar\";\nimport ActionLog from \"./Components/ActionLog\";\n\nconst maxActions = 3;\n\nconst playerStats = {\n  isAlive: true,\n  maxHp: 10,\n  currentHp: 10,\n  str: 5,\n  def: 5,\n  dex: 5,\n  lck: 5,\n  appr: 5,\n  money: 0,\n  actionsLeft: 3,\n  turn: 0,\n  actionLog: [],\n  currentTab: \"baseActions\",\n  changeTabText: \"Go To Shop\",\n  inCombat: false\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = playerStats;\n  }\n\n  actions = [];\n  inventory = [];\n\n  takeAction = () => {\n    this.setState(prevState => {\n      return { turn: prevState.turn + 1 };\n    });\n  };\n\n  reportAction = action => {\n    this.actions.push(action);\n    this.setState(prevState => {\n      return { actionLog: this.actionLog };\n    });\n  };\n\n  checkStatus = () => {\n    if (this.state.currentHp < 1) {\n      this.reportAction(\"You died!\");\n      this.setState(prevState => {\n        return { actionsLeft: \"💀\", isAlive: false };\n      });\n    }\n  };\n\n  rollStat = stat => {\n    return Math.floor(Math.random() * stat);\n  };\n\n  modifyStat = (stat, amt) => {\n    this.takeAction();\n    let checkActions = Math.max(this.state.actionsLeft - 1, 0);\n    if (this.state.actionsLeft > 0) {\n      this.setState(\n        prevState => {\n          return { [stat]: prevState[stat] + amt, actionsLeft: checkActions };\n        },\n        () => this.checkStatus()\n      );\n      if (amt < 0) {\n        this.reportAction(`You lost ${amt} ${stat}`);\n      } else {\n        this.reportAction(`You've gained ${amt} ${stat}`);\n      }\n    } else if (this.state.actionsLeft === \"💀\") {\n      this.reportAction(\"You are dead.\");\n    } else {\n      this.reportAction(\"You are too tired to do that.\");\n    }\n  };\n\n  randomAmount = () => {\n    return Math.floor((Math.random() * 10) / 2);\n  };\n\n  takeRest = () => {\n    if (this.state.actionsLeft === 0) {\n      this.setState(prevState => {\n        return {\n          actionsLeft: maxActions,\n          currentHp: Math.min(\n            this.state.maxHp,\n            prevState.currentHp + prevState.maxHp / 2\n          )\n        };\n      });\n      this.reportAction(\"You slept great!\");\n    } else if (this.state.actionsLeft === \"💀\") {\n      this.reportAction(\"You are dead.\");\n    } else {\n      this.reportAction(\"You aren't tired.\");\n    }\n  };\n\n  increaseStr = () => {\n    let amount = this.randomAmount();\n    this.modifyStat(\"str\", amount);\n  };\n\n  increaseDex = () => {\n    let amount = this.randomAmount();\n    this.modifyStat(\"dex\", amount);\n  };\n\n  increaseLck = () => {\n    let amount = this.randomAmount();\n    this.modifyStat(\"lck\", amount);\n  };\n\n  increaseAppr = () => {\n    let amount = this.randomAmount();\n    this.modifyStat(\"appr\", amount);\n  };\n\n  increaseMoney = () => {\n    let amount = this.randomAmount() * 3;\n    this.modifyStat(\"money\", amount);\n  };\n\n  startCombat = () => {\n    this.setState(\n      prevState => {\n        return { inCombat: true };\n      },\n      () => this.fightEnemy()\n    );\n  };\n\n  fightEnemy = () => {\n    this.takeAction();\n    if (this.state.actionsLeft > 0) {\n      let enemy = enemyList[this.rollStat(enemyList.length)];\n      this.reportAction(`You found a ${enemy.name}!`);\n      let rollStr = this.rollStat(this.state.str);\n      if (rollStr > enemy.str) {\n        setTimeout(\n          () => this.reportAction(`You defeated the ${enemy.name}!`),\n          1000\n        );\n        setTimeout(() => this.modifyStat(\"money\", enemy.loot), 2000);\n        // let rollLoot = Math.floor(Math.random() * this.state.lck);\n        // if (rollLoot >= enemy.treasureChance) {\n        //   this.inventory.push(enemy.treasure);\n        //   this.reportAction(`You gained a ${enemy.treasure.name}!`);\n        // }\n      } else {\n        setTimeout(() => this.reportAction(`You lost to ${enemy.name}!`), 1000);\n        setTimeout(() => this.modifyStat(\"currentHp\", enemy.str * -1), 2000);\n      }\n    } else if (this.state.actionsLeft === \"💀\") {\n      this.reportAction(\"You are dead.\");\n    } else {\n      this.reportAction(\"You are too tired to do that\");\n    }\n    setTimeout(\n      () =>\n        this.setState(prevState => {\n          return { inCombat: false };\n        }),\n      2000\n    );\n  };\n\n  changeTabs = () => {\n    let tabToGo = \"\";\n    let tabText = \"\";\n    if (this.state.currentTab === \"baseActions\") {\n      tabToGo = \"shops\";\n      tabText = \"Go Back\";\n    } else {\n      tabToGo = \"baseActions\";\n      tabText = \"Go to Shop\";\n    }\n    this.setState(prevState => {\n      return {\n        currentTab: tabToGo,\n        changeTabText: tabText\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">\n          <span>🗡️</span>\n          Fantasy Sim\n        </h1>\n        <div className=\"flex-container\">\n          <Stats stats={this.state} inventory={this.inventory} />\n          <ActionBar\n            isAlive={this.state.isAlive}\n            actionsLeft={this.state.actionsLeft}\n            takeRest={this.takeRest}\n            increaseStr={this.increaseStr}\n            increaseDex={this.increaseDex}\n            increaseLck={this.increaseLck}\n            increaseAppr={this.increaseAppr}\n            increaseMoney={this.increaseMoney}\n            startCombat={this.startCombat}\n            currentTab={this.state.currentTab}\n            changeTabs={this.changeTabs}\n            changeTabText={this.state.changeTabText}\n            inCombat={this.state.inCombat}\n          />\n          <ActionLog actions={this.actions} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}